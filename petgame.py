import telebot
from telebot import types
import database as db
import time
from parser import seconds_to_hms

API_TOKEN = '7006081046:AAFPbndJeFGBR4_tTQXHcItRZ0F4NJ4PsJw'

bot = telebot.TeleBot(API_TOKEN)



id = [0]
username = ['0']

@bot.message_handler(commands=['help', 'start'])
def welcome_message(message):
    message_ =  f'‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬ª¬ª‚ùÄ‚ùÄ‚ùÄ¬´¬´‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ\n'\
                f'      –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name} \n'\
                f'      –ë–æ—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω –¥–ª—è: \n'\
                f'      @solarezzov –∏ @solarezzova\n'\
                f'\n'\
                f'      –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: @solarezzov \n'\
                f'‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬ª¬ª‚ùÄ‚ùÄ‚ùÄ¬´¬´‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ'
    markup = types.InlineKeyboardMarkup()
    button_profile = types.InlineKeyboardButton('üìã –ü—Ä–æ—Ñ–∏–ª—å', callback_data='profile')
    button_partner = types.InlineKeyboardButton('üë©üèª‚Äç‚ù§Ô∏è‚Äçüë®üèª –ü–∞—Ä—Ç–Ω—ë—Ä', callback_data='partner')
    button_pet = types.InlineKeyboardButton('üêæ –ü–∏—Ç–æ–º–µ—Ü', callback_data='pet')
    markup.row(button_profile, button_pet, button_partner)
    bot.reply_to(message, message_, reply_markup=markup)
    print(time.time())
    try:
        db.table_input(user_id=message.chat.id, username=message.from_user.username)
    except:
        pass

@bot.message_handler(func=lambda message: db.info(message.chat.id)[3] != "None")
def handle_petname_input(message):
    try:
        if db.info_pet(db.info(message.chat.id)[1])[3] != "–ü–∏—Ç–æ–º–µ—Ü –Ω–µ –≤—ã–±—Ä–∞–Ω" and db.info_pet(db.info(message.chat.id)[1])[4] == "–ò–º—è –ø–∏—Ç–æ–º—Ü—É –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ":
            db.update_petname(message.from_user.username, message.text)
            bot.send_message(message.chat.id, f'‚ù§Ô∏è –í—ã –ø—Ä–∏—Å–≤–æ–∏–ª–∏ –ø–∏—Ç–æ–º—Ü—É –∏–º—è - "{db.info_pet(message.from_user.username)[4]}"')
            bot.send_message(db.info(message.chat.id)[3], f'‚ù§Ô∏è –ü–∞—Ä—Ç–Ω—ë—Ä –ø—Ä–∏—Å–≤–æ–∏–ª –∏–º—è –ø–∏—Ç–æ–º—Ü—É - "{db.info_pet(message.from_user.username)[4]}"')
    except TypeError:
        bot.send_message(message.chat.id, "‚úîÔ∏è –ò–º—è –¥–æ–ª–∂–µ–Ω –ø–∏—Å–∞—Ç—å –í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä: ")

@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    bot.answer_callback_query(call.id)
    match call.data:
        case 'profile':
            profile_function(call.message)
        case 'partner':
            if db.info(call.message.chat.id)[3] != "None":
                markup = types.InlineKeyboardMarkup()
                button_partner = types.InlineKeyboardButton('üíî –†–∞—Å—Å—Ç–∞—Ç—å—Å—è', callback_data='breake')
                button_pet = types.InlineKeyboardButton('üêæ –ù–∞—à –ø–∏—Ç–æ–º–µ—Ü', callback_data='pet')
                markup.row(button_partner, button_pet)
                bot.send_message(call.message.chat.id, f"üìå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –ø–∞—Ä—Ç–Ω—ë—Ä—É:\n‚ù§Ô∏è –í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä: @{db.info(call.message.chat.id)[2]}", reply_markup=markup)
            else:
                bot.send_message(call.message.chat.id, "‚å®Ô∏è –í–≤–µ–¥–∏—Ç–µ [ID] –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è(–µ–≥–æ –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –≤ –ø—Ä–æ—Ñ–∏–ª–µ): ")
        case 'breake':
            bot.send_message(call.message.chat.id, "üíî –í—ã —Ä–∞—Å—Å—Ç–∞–ª–∏—Å—å —Å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º.")
            bot.send_message(db.info(call.message.chat.id)[3], "üíî –í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä —Ä–µ—à–∏–ª —Ä–∞—Å—Å—Ç–∞—Ç—å—Å—è.")
            #user_id: int, partner_name: str, partner_id: int
            db.partner_update(db.info(call.message.chat.id)[3], "–ü–∞—Ä—Ç–Ω—ë—Ä–∞ –Ω–µ—Ç", "None")
            db.partner_update(call.message.chat.id, "–ü–∞—Ä—Ç–Ω—ë—Ä–∞ –Ω–µ—Ç", "None")
            db.delete_pet(db.info(call.message.chat.id)[1])
        case 'pet':
            try:
                if db.info(call.message.chat.id)[3] == "None":
                    bot.send_message(call.message.chat.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø–∞—Ä—Ç–Ω—ë—Ä–∞!")
                elif db.info_pet(db.info(call.message.chat.id)[1])[3] != "–ü–∏—Ç–æ–º–µ—Ü –Ω–µ –≤—ã–±—Ä–∞–Ω":
                    markup = types.InlineKeyboardMarkup()
                    button_locate = types.InlineKeyboardButton('üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Ç–æ–º—Ü–∞ –ø–∞—Ä—Ç–Ω—ë—Ä—É', callback_data='send_pet')
                    button_eat = types.InlineKeyboardButton('üçΩÔ∏è –ü–æ–∫–æ—Ä–º–∏—Ç—å –ø–∏—Ç–æ–º—Ü–∞', callback_data='eat_pet')
                    button_water = types.InlineKeyboardButton('ü•õ –ü–æ–ø–æ–∏—Ç—å –ø–∏—Ç–æ–º—Ü–∞', callback_data='water_pet')
                    markup.row(button_locate, button_eat, button_water)
                    health_status = "–û—Ç–ª–∏—á–Ω–æ —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—Ç" if db.info_pet(db.info(call.message.chat.id)[1])[5] > 70 else "–ü–ª–æ—Ö–æ" if \
                    db.info_pet(db.info(call.message.chat.id)[1])[5] <= 30 else "–ù–æ—Ä–º–∞–ª—å–Ω–æ"
                    eat_status = "–ù–µ –≥–æ–ª–æ–¥–µ–Ω" if db.info_pet(db.info(call.message.chat.id)[1])[6] == 100 else "–ì–æ–ª–æ–¥–µ–Ω" if \
                    db.info_pet(db.info(call.message.chat.id)[1])[6] <= 30 else "–ù–æ—Ä–º–∞–ª—å–Ω–æ"
                    water_status = "–ù–µ —Ö–æ—á–µ—Ç –ø–∏—Ç—å" if db.info_pet(db.info(call.message.chat.id)[1])[7] == 100 else "–•–æ—á–µ—Ç –ø–∏—Ç—å" if \
                    db.info_pet(db.info(call.message.chat.id)[1])[7] <= 30 else "–ù–æ—Ä–º–∞–ª—å–Ω–æ"
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=
                    '‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ¬ª¬ª‚ùÄ‚ùÄ‚ùÄ¬ª¬ª\n'\
                    '| üìå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –ø–∏—Ç–æ–º—Ü—É:\n' \
                    f'| üêæ –ü–∏—Ç–æ–º–µ—Ü - {db.info_pet(db.info(call.message.chat.id)[1])[3]}\n' \
                    f'| üì∏ –ò–º—è –ø–∏—Ç–æ–º—Ü–∞ - {db.info_pet(db.info(call.message.chat.id)[1])[4]}\n' \
                    f'| üåç –ú–µ—Å—Ç–æ—Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ - {db.info_pet(db.info(call.message.chat.id)[1])[2]}\n' \
                    f'| ü©∫ –ó–¥–æ—Ä–æ–≤—å–µ -  {health_status}\n' \
                    f'| üçΩÔ∏è –ï–¥–∞ - {eat_status}\n' \
                    f'| üí¶ –í–æ–¥–∞ - {water_status}\n' \
                    '‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ¬ª¬ª‚ùÄ‚ùÄ‚ùÄ¬ª¬ª', reply_markup=markup)
                else:
                    choice_pet(call.message)
            except TypeError:
                choice_pet(call.message)
        case 'send_pet':
            if db.info_pet(db.info(call.message.chat.id)[1])[2] != db.info(call.message.chat.id)[1]:
                bot.send_message(call.message.chat.id, "üö´ –ü–∏—Ç–æ–º–µ—Ü –Ω–µ —É –í–∞—Å!")
            elif db.info_pet(db.info(call.message.chat.id)[1])[8] > 0:
                bot.send_message(call.message.chat.id, "üö´ –ü–∏—Ç–æ–º–µ—Ü —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—É—Ç–∏!")
            else:
                transfer_pet(db.info(call.message.chat.id)[1])
        case 'yes_partner':
            profile_partner(call.message)
        case 'no_partner':
            bot.send_message(call.message.chat.id, 'üö´ –í–∞–º –æ—Ç–∫–∞–∑–∞–ª–∏ –≤ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–µ')
            db.request_partner_id(0, call.message.chat.id)
        case 'dog':
            markup = types.InlineKeyboardMarkup()
            button_yesdog = types.InlineKeyboardButton('‚úîÔ∏è –û–¥–æ–±—Ä—è—é', callback_data='yesdog')
            button_nodog = types.InlineKeyboardButton('‚ùå –ù–µ –æ–¥–æ–±—Ä—è—é', callback_data='notapprove')
            markup.row(button_yesdog, button_nodog)
            bot.send_message(call.message.chat.id, '‚ö†Ô∏è –í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –¥–æ–ª–∂–µ–Ω –æ–¥–æ–±—Ä–∏—Ç—å –í–∞—à –≤—ã–±–æ—Ä. –û–∂–∏–¥–∞–µ–º –æ–¥–æ–±—Ä–µ–Ω–∏—è...')
            bot.send_message(db.info(call.message.chat.id)[3], '‚ö†Ô∏è –í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –≤—ã–±—Ä–∞–ª –ø–∏—Ç–æ–º—Ü–∞ "üê∂ –°–æ–±–∞–∫–∞". –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ —Å–≤—è–∑–∏ —Å –≤–∞—à–∏–º —Ä–µ—à–µ–Ω–∏–µ–º.', reply_markup=markup)
        case 'cat':
            markup = types.InlineKeyboardMarkup()
            button_yescat = types.InlineKeyboardButton('‚úîÔ∏è –û–¥–æ–±—Ä—è—é', callback_data='yescat')
            button_nocat = types.InlineKeyboardButton('‚ùå –ù–µ –æ–¥–æ–±—Ä—è—é', callback_data='notapprove')
            markup.row(button_yescat, button_nocat)
            bot.send_message(call.message.chat.id, '‚ö†Ô∏è –í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –¥–æ–ª–∂–µ–Ω –æ–¥–æ–±—Ä–∏—Ç—å –í–∞—à –≤—ã–±–æ—Ä. –û–∂–∏–¥–∞–µ–º –æ–¥–æ–±—Ä–µ–Ω–∏—è...')
            bot.send_message(db.info(call.message.chat.id)[3], '‚ö†Ô∏è –í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –≤—ã–±—Ä–∞–ª –ø–∏—Ç–æ–º—Ü–∞ "üê± –ö–æ—Ç". –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ —Å–≤—è–∑–∏ —Å –≤–∞—à–∏–º —Ä–µ—à–µ–Ω–∏–µ–º.', reply_markup=markup)
        case 'squirrel':
            markup = types.InlineKeyboardMarkup()
            button_yesbelka = types.InlineKeyboardButton('‚úîÔ∏è –û–¥–æ–±—Ä—è—é', callback_data='yesbelka')
            button_nobelka = types.InlineKeyboardButton('‚ùå –ù–µ –æ–¥–æ–±—Ä—è—é', callback_data='notapprove')
            markup.row(button_yesbelka, button_nobelka)
            bot.send_message(call.message.chat.id, '‚ö†Ô∏è –í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –¥–æ–ª–∂–µ–Ω –æ–¥–æ–±—Ä–∏—Ç—å –í–∞—à –≤—ã–±–æ—Ä. –û–∂–∏–¥–∞–µ–º –æ–¥–æ–±—Ä–µ–Ω–∏—è...')
            bot.send_message(db.info(call.message.chat.id)[3], '‚ö†Ô∏è –í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –≤—ã–±—Ä–∞–ª –ø–∏—Ç–æ–º—Ü–∞ "üêøÔ∏è –ë–µ–ª–∫–∞". –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ —Å–≤—è–∑–∏ —Å –≤–∞—à–∏–º —Ä–µ—à–µ–Ω–∏–µ–º.', reply_markup=markup)
        case 'hamster':
            markup = types.InlineKeyboardMarkup()
            button_yeshamster = types.InlineKeyboardButton('‚úîÔ∏è –û–¥–æ–±—Ä—è—é', callback_data='yeshamster')
            button_nohamster = types.InlineKeyboardButton('‚ùå –ù–µ –æ–¥–æ–±—Ä—è—é', callback_data='notapprove')
            markup.row(button_yeshamster, button_nohamster)
            bot.send_message(call.message.chat.id, '‚ö†Ô∏è –í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –¥–æ–ª–∂–µ–Ω –æ–¥–æ–±—Ä–∏—Ç—å –í–∞—à –≤—ã–±–æ—Ä. –û–∂–∏–¥–∞–µ–º –æ–¥–æ–±—Ä–µ–Ω–∏—è...')
            bot.send_message(db.info(call.message.chat.id)[3], '‚ö†Ô∏è –í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –≤—ã–±—Ä–∞–ª –ø–∏—Ç–æ–º—Ü–∞ "üêπ –•–æ–º—è–∫". –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ —Å–≤—è–∑–∏ —Å –≤–∞—à–∏–º —Ä–µ—à–µ–Ω–∏–µ–º.', reply_markup=markup)
        case 'turtle':
            markup = types.InlineKeyboardMarkup()
            button_yesturtle = types.InlineKeyboardButton('‚úîÔ∏è –û–¥–æ–±—Ä—è—é', callback_data='yesturtle')
            button_noturtle = types.InlineKeyboardButton('‚ùå –ù–µ –æ–¥–æ–±—Ä—è—é', callback_data='notapprove')
            markup.row(button_yesturtle, button_noturtle)
            bot.send_message(call.message.chat.id, '‚ö†Ô∏è –í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –¥–æ–ª–∂–µ–Ω –æ–¥–æ–±—Ä–∏—Ç—å –í–∞—à –≤—ã–±–æ—Ä. –û–∂–∏–¥–∞–µ–º –æ–¥–æ–±—Ä–µ–Ω–∏—è...')
            bot.send_message(db.info(call.message.chat.id)[3], '‚ö†Ô∏è –í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –≤—ã–±—Ä–∞–ª –ø–∏—Ç–æ–º—Ü–∞ "üê¢ –ß–µ—Ä–µ–ø–∞—Ö–∞". –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ —Å–≤—è–∑–∏ —Å –≤–∞—à–∏–º —Ä–µ—à–µ–Ω–∏–µ–º.', reply_markup=markup)
        case 'parrot':
            markup = types.InlineKeyboardMarkup()
            button_yesparrot = types.InlineKeyboardButton('‚úîÔ∏è –û–¥–æ–±—Ä—è—é', callback_data='yesparrot')
            button_noparrot = types.InlineKeyboardButton('‚ùå –ù–µ –æ–¥–æ–±—Ä—è—é', callback_data='notapprove')
            markup.row(button_yesparrot, button_noparrot)
            bot.send_message(call.message.chat.id, '‚ö†Ô∏è –í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –¥–æ–ª–∂–µ–Ω –æ–¥–æ–±—Ä–∏—Ç—å –í–∞—à –≤—ã–±–æ—Ä. –û–∂–∏–¥–∞–µ–º –æ–¥–æ–±—Ä–µ–Ω–∏—è...')
            bot.send_message(db.info(call.message.chat.id)[3], '‚ö†Ô∏è –í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –≤—ã–±—Ä–∞–ª –ø–∏—Ç–æ–º—Ü–∞ "ü¶ú –ü–æ–ø—É–≥–∞–π". –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ —Å–≤—è–∑–∏ —Å –≤–∞—à–∏–º —Ä–µ—à–µ–Ω–∏–µ–º.', reply_markup=markup)
        case 'yesdog':
            db.pet_update(owner1=db.info(call.message.chat.id)[1], owner2=db.info(call.message.chat.id)[2], pet="üê∂ –°–æ–±–∞–∫–∞")
            db.update_locate(owner=db.info(call.message.chat.id)[1])
            bot.send_message(db.info(call.message.chat.id)[3], f'üë©üèª‚Äç‚ù§Ô∏è‚Äçüë®üèª –ü–∞—Ä—Ç–Ω—ë—Ä –æ–¥–æ–±—Ä–∏–ª –í–∞—à –≤—ã–±–æ—Ä. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü {db.info_pet(db.info(call.message.chat.id)[1])[3]}.')
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,text=f'üë©üèª‚Äç‚ù§Ô∏è‚Äçüë®üèª –í—ã –æ–¥–æ–±—Ä–∏–ª–∏ –≤—ã–±–æ—Ä. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü {db.info_pet(db.info(call.message.chat.id)[1])[3]}.\n\n–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –∏–º—è –ø–∏—Ç–æ–º—Ü–∞, –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ö–æ—Ä–æ—à–æ –ø–æ—Å–æ–≤–µ—Ç—É–π—Ç–µ—Å—å —Å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º! –ò–º—è:')
        case 'yescat':
            db.pet_update(owner1=db.info(call.message.chat.id)[1], owner2=db.info(call.message.chat.id)[2], pet="üê± –ö–æ—Ç")
            db.update_locate(owner=db.info(call.message.chat.id)[1])
            bot.send_message(db.info(call.message.chat.id)[3], f'üë©üèª‚Äç‚ù§Ô∏è‚Äçüë®üèª –ü–∞—Ä—Ç–Ω—ë—Ä –æ–¥–æ–±—Ä–∏–ª –í–∞—à –≤—ã–±–æ—Ä. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü {db.info_pet(db.info(call.message.chat.id)[1])[3]}.')
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,text=f'üë©üèª‚Äç‚ù§Ô∏è‚Äçüë®üèª –í—ã –æ–¥–æ–±—Ä–∏–ª–∏ –≤—ã–±–æ—Ä. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü {db.info_pet(db.info(call.message.chat.id)[1])[3]}.\n\n–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –∏–º—è –ø–∏—Ç–æ–º—Ü–∞, –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ö–æ—Ä–æ—à–æ –ø–æ—Å–æ–≤–µ—Ç—É–π—Ç–µ—Å—å —Å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º! –ò–º—è:')
        case 'yesbelka':
            db.pet_update(owner1=db.info(call.message.chat.id)[1], owner2=db.info(call.message.chat.id)[2], pet="üêøÔ∏è –ë–µ–ª–∫–∞")
            db.update_locate(owner=db.info(call.message.chat.id)[1])
            bot.send_message(db.info(call.message.chat.id)[3], f'üë©üèª‚Äç‚ù§Ô∏è‚Äçüë®üèª –ü–∞—Ä—Ç–Ω—ë—Ä –æ–¥–æ–±—Ä–∏–ª –í–∞—à –≤—ã–±–æ—Ä. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü {db.info_pet(db.info(call.message.chat.id)[1])[3]}.')
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,text=f'üë©üèª‚Äç‚ù§Ô∏è‚Äçüë®üèª –í—ã –æ–¥–æ–±—Ä–∏–ª–∏ –≤—ã–±–æ—Ä. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü {db.info_pet(db.info(call.message.chat.id)[1])[3]}.\n\n–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –∏–º—è –ø–∏—Ç–æ–º—Ü–∞, –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ö–æ—Ä–æ—à–æ –ø–æ—Å–æ–≤–µ—Ç—É–π—Ç–µ—Å—å —Å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º! –ò–º—è:')
        case 'yeshamster':
            db.pet_update(owner1=db.info(call.message.chat.id)[1], owner2=db.info(call.message.chat.id)[2], pet="üêπ –•–æ–º—è–∫")
            db.update_locate(owner=db.info(call.message.chat.id)[1])
            bot.send_message(db.info(call.message.chat.id)[3], f'üë©üèª‚Äç‚ù§Ô∏è‚Äçüë®üèª –ü–∞—Ä—Ç–Ω—ë—Ä –æ–¥–æ–±—Ä–∏–ª –í–∞—à –≤—ã–±–æ—Ä. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü {db.info_pet(db.info(call.message.chat.id)[1])[3]}.')
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,text=f'üë©üèª‚Äç‚ù§Ô∏è‚Äçüë®üèª –í—ã –æ–¥–æ–±—Ä–∏–ª–∏ –≤—ã–±–æ—Ä. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü {db.info_pet(db.info(call.message.chat.id)[1])[3]}.\n\n–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –∏–º—è –ø–∏—Ç–æ–º—Ü–∞, –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ö–æ—Ä–æ—à–æ –ø–æ—Å–æ–≤–µ—Ç—É–π—Ç–µ—Å—å —Å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º! –ò–º—è:')
        case 'yesturtle':
            db.pet_update(owner1=db.info(call.message.chat.id)[1], owner2=db.info(call.message.chat.id)[2], pet="üê¢ –ß–µ—Ä–µ–ø–∞—Ö–∞")
            db.update_locate(owner=db.info(call.message.chat.id)[1])
            bot.send_message(db.info(call.message.chat.id)[3], f'üë©üèª‚Äç‚ù§Ô∏è‚Äçüë®üèª –ü–∞—Ä—Ç–Ω—ë—Ä –æ–¥–æ–±—Ä–∏–ª –í–∞—à –≤—ã–±–æ—Ä. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü {db.info_pet(db.info(call.message.chat.id)[1])[3]}.')
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,text=f'üë©üèª‚Äç‚ù§Ô∏è‚Äçüë®üèª –í—ã –æ–¥–æ–±—Ä–∏–ª–∏ –≤—ã–±–æ—Ä. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü {db.info_pet(db.info(call.message.chat.id)[1])[3]}.\n\n–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –∏–º—è –ø–∏—Ç–æ–º—Ü–∞, –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ö–æ—Ä–æ—à–æ –ø–æ—Å–æ–≤–µ—Ç—É–π—Ç–µ—Å—å —Å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º! –ò–º—è:')
        case 'yesparrot':
            db.pet_update(owner1=db.info(call.message.chat.id)[1], owner2=db.info(call.message.chat.id)[2], pet="ü¶ú –ü–æ–ø—É–≥–∞–π")
            db.update_locate(owner=db.info(call.message.chat.id)[1])
            bot.send_message(db.info(call.message.chat.id)[3], f'üë©üèª‚Äç‚ù§Ô∏è‚Äçüë®üèª –ü–∞—Ä—Ç–Ω—ë—Ä –æ–¥–æ–±—Ä–∏–ª –í–∞—à –≤—ã–±–æ—Ä. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü {db.info_pet(db.info(call.message.chat.id)[1])[3]}.')
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,text=f'üë©üèª‚Äç‚ù§Ô∏è‚Äçüë®üèª –í—ã –æ–¥–æ–±—Ä–∏–ª–∏ –≤—ã–±–æ—Ä. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø–∏—Ç–æ–º–µ—Ü {db.info_pet(db.info(call.message.chat.id)[1])[3]}.\n\n–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –∏–º—è –ø–∏—Ç–æ–º—Ü–∞, –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ö–æ—Ä–æ—à–æ –ø–æ—Å–æ–≤–µ—Ç—É–π—Ç–µ—Å—å —Å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º! –ò–º—è:')
        case 'notapprove':
            bot.send_message(db.info(call.message.chat.id)[3], "‚ùå –í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –Ω–µ –æ–¥–æ–±—Ä–∏–ª –í–∞—à –≤—ã–±–æ—Ä.")

def transfer_pet(usernametg):
    locate_time = 15
    db.update_timelocate(usernametg, locate_time)
    if locate_time != 0:
        transfer_message(chatid=db.info_username(usernametg)[0], username=usernametg)
        while locate_time > 0:
            locate_time -= 1
            db.update_timelocate(owner=usernametg, locate_time=locate_time)
            time.sleep(1)
        finish_transfer_message(db.info_username(usernametg)[3])

def finish_transfer_message(chatid):
    db.update_locate(db.info(chatid)[1])
    bot.send_message(chatid, f"–ü–∏—Ç–æ–º–µ—Ü –ø—Ä–∏–±—ã–ª –∫ –í–∞–º")

def transfer_message(chatid, username):
    bot.send_message(chatid, f"–í–∞—à –ø–∏—Ç–æ–º–µ—Ü –ø—Ä–∏–±—É–¥–µ—Ç –∫ –ø–∞—Ä—Ç–Ω—ë—Ä—É —á–µ—Ä–µ–∑ - {seconds_to_hms(db.info_pet(db.info_username(username)[1])[8])}")
    bot.send_message(db.info_username(username)[3], f"–ü–∏—Ç–æ–º–µ—Ü –ø—Ä–∏–±—É–¥–µ—Ç –∫ –í–∞–º —á–µ—Ä–µ–∑ - {seconds_to_hms(db.info_pet(db.info_username(username)[1])[8])}")
    #threading.Thread(target=transfer_pet, args=(username,), daemon=True).start()

def choice_pet(message):
    markup = types.InlineKeyboardMarkup()
    button_dog = types.InlineKeyboardButton('üê∂ –°–æ–±–∞–∫–∞', callback_data='dog')
    button_cat = types.InlineKeyboardButton('üê± –ö–æ—Ç', callback_data='cat')
    button_squirrel = types.InlineKeyboardButton('üêøÔ∏è –ë–µ–ª–∫–∞', callback_data='squirrel')
    button_hamster = types.InlineKeyboardButton('üêπ –•–æ–º—è–∫', callback_data='hamster')
    button_turtle = types.InlineKeyboardButton('üê¢ –ß–µ—Ä–µ–ø–∞—Ö–∞', callback_data='turtle')
    button_parrot = types.InlineKeyboardButton('ü¶ú –ü–æ–ø—É–≥–∞–π', callback_data='parrot')
    markup.add(button_dog, button_cat, button_squirrel)
    markup.add(button_hamster, button_turtle, button_parrot)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∏—Ç–æ–º—Ü–∞: ", reply_markup=markup)

@bot.message_handler(func=lambda message: db.info(message.chat.id)[4] == 0)
def handle_id_input(message): 
    markup = types.InlineKeyboardMarkup()
    button_yes = types.InlineKeyboardButton('‚úîÔ∏è –î–∞', callback_data='yes_partner')
    button_no = types.InlineKeyboardButton('‚ùå –ù–µ—Ç', callback_data='no_partner')
    markup.row(button_yes, button_no)
    part = message.text
    id[0] = message.chat.id
    username[0] = message.from_user.username
    db.request_partner_id(part, message.chat.id)
    try:
        if part != db.info(message.chat.id)[0]:
            bot.send_message(part, "üì® –í–∞–º –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ", reply_markup=markup)
        else:
            bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text="‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–ø—Ä–æ—Å —Å–µ–±–µ!")
    except:
        bot.reply_to(message, "‚ö†Ô∏è id –Ω–µ –Ω–∞–π–¥–µ–Ω")
        db.request_partner_id(0, id[0])

def profile_partner(message):
    bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text= "ü§ùüèª –í—ã —Ç–µ–ø–µ—Ä—å –ø–∞—Ä—Ç–Ω–µ—Ä—ã")
    bot.send_message(id[0], "ü§ùüèª –í—ã —Ç–µ–ø–µ—Ä—å –ø–∞—Ä—Ç–Ω–µ—Ä—ã")
                     #user_id,   partner_name, partner_id
    db.partner_update(message.chat.id, username[0], id[0])
    db.partner_update(id[0], db.info(message.chat.id)[1], db.info(message.chat.id)[0])
    db.request_partner_id(0, id[0])

def profile_function(message):
    try:
        markup = types.InlineKeyboardMarkup()
        button_locate = types.InlineKeyboardButton('üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Ç–æ–º—Ü–∞ –ø–∞—Ä—Ç–Ω—ë—Ä—É', callback_data='send_pet')
        button_eat = types.InlineKeyboardButton('üçΩÔ∏è –ü–æ–∫–æ—Ä–º–∏—Ç—å –ø–∏—Ç–æ–º—Ü–∞', callback_data='eat_pet')
        button_water = types.InlineKeyboardButton('ü•õ –ü–æ–ø–æ–∏—Ç—å –ø–∏—Ç–æ–º—Ü–∞', callback_data='water_pet')
        markup.row(button_locate, button_eat, button_water)
        health_status = "–û—Ç–ª–∏—á–Ω–æ —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—Ç" if db.info_pet(db.info(message.chat.id)[1])[5] > 70 else "–ü–ª–æ—Ö–æ" if db.info_pet(db.info(message.chat.id)[1])[5] <= 30 else "–ù–æ—Ä–º–∞–ª—å–Ω–æ"
        eat_status = "–ù–µ –≥–æ–ª–æ–¥–µ–Ω" if db.info_pet(db.info(message.chat.id)[1])[6] == 100 else "–ì–æ–ª–æ–¥–µ–Ω" if db.info_pet(db.info(message.chat.id)[1])[6] <= 30 else "–ù–æ—Ä–º–∞–ª—å–Ω–æ"
        water_status = "–ù–µ —Ö–æ—á–µ—Ç –ø–∏—Ç—å" if db.info_pet(db.info(message.chat.id)[1])[7] == 100 else "–•–æ—á–µ—Ç –ø–∏—Ç—å" if db.info_pet(db.info(message.chat.id)[1])[7] <= 30 else "–ù–æ—Ä–º–∞–ª—å–Ω–æ"
        bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=
'‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ¬ª¬ª‚ùÄ‚ùÄ‚ùÄ¬ª¬ª\n'\
f'| üìã –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n'\
f'| üë§ –ò–º—è - @{db.info(message.chat.id)[1]}\n'\
f'| üÜî –ê–π–¥–∏ - {db.info(message.chat.id)[0]} \n'\
f'| üë©üèª‚Äç‚ù§Ô∏è‚Äçüë®üèª –ü–∞—Ä—Ç–Ω–µ—Ä - @{db.info(message.chat.id)[2]}\n'\
'|‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n'\
'| üìå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –ø–∏—Ç–æ–º—Ü—É:\n'\
f'| üêæ –ü–∏—Ç–æ–º–µ—Ü - {db.info_pet(db.info(message.chat.id)[1])[3]}\n'\
f'| üì∏ –ò–º—è –ø–∏—Ç–æ–º—Ü–∞ - {db.info_pet(db.info(message.chat.id)[1])[4]}\n'\
f'| üåç –ú–µ—Å—Ç–æ—Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ - {db.info_pet(db.info(message.chat.id)[1])[2]}\n'\
f'| ü©∫ –ó–¥–æ—Ä–æ–≤—å–µ -  {health_status}\n'\
f'| üçΩÔ∏è –ï–¥–∞ - {eat_status}\n'\
f'| üí¶ –í–æ–¥–∞ - {water_status}\n'\
'‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ¬ª¬ª‚ùÄ‚ùÄ‚ùÄ¬ª¬ª', reply_markup=markup)
    except:
        bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id, text=
'‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ¬ª¬ª‚ùÄ‚ùÄ‚ùÄ¬ª¬ª\n'\
f'| üìã –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n'\
f'| üë§ –ò–º—è - @{db.info(message.chat.id)[1]}\n'\
f'| üÜî –ê–π–¥–∏ - {db.info(message.chat.id)[0]} \n'\
f'| üë©üèª‚Äç‚ù§Ô∏è‚Äçüë®üèª –ü–∞—Ä—Ç–Ω–µ—Ä - {db.info(message.chat.id)[2]}\n'\
'‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ¬ª¬ª‚ùÄ‚ùÄ‚ùÄ¬ª¬ª')


print("bot started")
bot.infinity_polling()
